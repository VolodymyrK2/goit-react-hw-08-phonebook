{"version":3,"file":"static/js/952.425980e5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__container\":\"ContactForm_form__container__ReeGK\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector([selectContacts,selectFilter],(contacts,filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return  contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n})","import { useState } from 'react'\nimport css from './ContactForm.module.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n    const contacts = useSelector(selectContacts)\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\nconst handleChange = ({ currentTarget: { value, name } }) => {\n    if (name === 'name') {\n        setName(value);\n    } else if (name === 'number') {\n        setNumber(value);\n        }\n    }\nconst  handleSubmit = (evt) => {\n    evt.preventDefault();\n     const {\n    elements: { name, number }\n    } = evt.currentTarget;\n    if (contacts.some(contact => contact.name.toLowerCase() === name.value.toLowerCase())) {\n        alert(`${name} is already in contacts`) \n      reset();  \n    } else {\n        dispatch(addContact({ name:name.value, number:number.value }));\n    reset();\n    }\n    }\nconst reset = () => {\n    setName('')\n    setNumber('')\n    }\nreturn    (\n            <form onSubmit={handleSubmit} className={css.form__container}>\n                <label className={css.form__label}>\n                    Name\n                    <input className={css.form__input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleChange}\n                    value={name}\n                    />\n                </label>\n                <label className={css.form__label}>\n                    Number\n                    <input className={css.form__input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                     onChange={handleChange}\n                    value={number}\n                    />\n                </label>\n        <button className={css.form__button} type=\"submit\" >Add contact</button>\n            </form>\n        )\n    }\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"filter__text\":\"Filter_filter__text__aAasw\",\"filter__input\":\"Filter_filter__input__toa89\"};","\nimport PropTypes from 'prop-types'\nimport css from './Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = (e)=>dispatch(changeFilter(e.target.value))\n  return (\n    <>\n      <p className={css.filter__text}>Find contacts by name</p>\n      <input className={css.filter__input}\n        name='filter'\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange} />\n      </>\n  )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func \n}\n\nexport default Filter","// extracted by mini-css-extract-plugin\nexport default {\"contact__item\":\"ContactListItem_contact__item__gRkIy\",\"contact__btn\":\"ContactListItem_contact__btn__D0pkC\"};","import PropTypes from 'prop-types'\nimport css from './ContactListItem.module.css'\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\n\nconst ContactListItem = ({contact}) => {\n const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n   const { name, phone } = contact;\n  return (\n      <li  className={css.contact__item}>\n      <p>{name}  {phone}</p>\n      <button className={css.contact__btn}\n        onClick={handleDelete}\n        type=\"button\">Delete</button>\n    </li>  \n  )\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  }).isRequired,\n  \n}\n\nexport default ContactListItem","import ContactListItem from 'components/ContactListItem/ContactListItem'\nimport { useSelector } from 'react-redux'\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  \n  const visibleContacts = useSelector(selectVisibleContacts);\n  \n  return (\n              <ul>\n              {visibleContacts.map((contact) => (\n                <ContactListItem\n                  contact={contact}\n                  key={contact.id}\n                 \n                  />\n              ))}\n</ul>\n  \n  )\n}\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Contacts_phonebook__3f0qH\",\"phonebook__title\":\"Contacts_phonebook__title__4JWGV\",\"contacts__title\":\"Contacts_contacts__title__sUt0i\"};","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Spinner} from '@chakra-ui/react'\nimport ContactForm from 'components/ContactForm/ContactForm'\nimport Filter from 'components/Filter/Filter'\nimport ContactList from 'components/ContactsList/ContactsList'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { useEffect } from \"react\"\nimport { fetchContacts } from 'redux/contacts/operations'\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors'\nimport css from './Contacts.module.css'\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    return (\n      <div className={css.phonebook}>\n        <h1 className={css.phonebook__title}>Phonebook</h1>\n      <ContactForm/>\n        <h2 className={css.contacts__title}>Contacts</h2>\n        <Filter />\n        {isLoading && <Spinner\n            thickness='4px'\n            speed='0.65s'\n            emptyColor='gray.200'\n            color='blue.500'\n            size='xl'\n          />\n        }\n        {error && Notify.failure({error})}\n        <ContactList/>\n      </div>\n    )\n}\nexport default Contacts"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","currentTarget","value","reset","onSubmit","evt","preventDefault","elements","some","alert","addContact","className","css","type","pattern","title","required","onChange","e","changeFilter","target","phone","onClick","deleteContact","id","visibleContacts","map","useEffect","fetchContacts","thickness","speed","emptyColor","color","size","Notify"],"sourceRoot":""}